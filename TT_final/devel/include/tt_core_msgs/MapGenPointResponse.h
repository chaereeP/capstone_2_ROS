// Generated by gencpp from file tt_core_msgs/MapGenPointResponse.msg
// DO NOT EDIT!


#ifndef TT_CORE_MSGS_MESSAGE_MAPGENPOINTRESPONSE_H
#define TT_CORE_MSGS_MESSAGE_MAPGENPOINTRESPONSE_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <std_msgs/Int32.h>

namespace tt_core_msgs
{
template <class ContainerAllocator>
struct MapGenPointResponse_
{
  typedef MapGenPointResponse_<ContainerAllocator> Type;

  MapGenPointResponse_()
    : res()  {
    }
  MapGenPointResponse_(const ContainerAllocator& _alloc)
    : res(_alloc)  {
  (void)_alloc;
    }



   typedef  ::std_msgs::Int32_<ContainerAllocator>  _res_type;
  _res_type res;





  typedef boost::shared_ptr< ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator> const> ConstPtr;

}; // struct MapGenPointResponse_

typedef ::tt_core_msgs::MapGenPointResponse_<std::allocator<void> > MapGenPointResponse;

typedef boost::shared_ptr< ::tt_core_msgs::MapGenPointResponse > MapGenPointResponsePtr;
typedef boost::shared_ptr< ::tt_core_msgs::MapGenPointResponse const> MapGenPointResponseConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace tt_core_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsMessage': True, 'IsFixedSize': True, 'HasHeader': False}
// {'tt_core_msgs': ['/home/naverlabs/ros/TT_final/src/tt3_common/tt_core_msgs/msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg'], 'geometry_msgs': ['/opt/ros/kinetic/share/geometry_msgs/cmake/../msg'], 'sensor_msgs': ['/opt/ros/kinetic/share/sensor_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsMessage< ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "3b5a227652033bbb93d9f7ec8eba5bce";
  }

  static const char* value(const ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x3b5a227652033bbbULL;
  static const uint64_t static_value2 = 0x93d9f7ec8eba5bceULL;
};

template<class ContainerAllocator>
struct DataType< ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "tt_core_msgs/MapGenPointResponse";
  }

  static const char* value(const ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "std_msgs/Int32 res\n\
\n\
\n\
================================================================================\n\
MSG: std_msgs/Int32\n\
int32 data\n\
";
  }

  static const char* value(const ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.res);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct MapGenPointResponse_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::tt_core_msgs::MapGenPointResponse_<ContainerAllocator>& v)
  {
    s << indent << "res: ";
    s << std::endl;
    Printer< ::std_msgs::Int32_<ContainerAllocator> >::stream(s, indent + "  ", v.res);
  }
};

} // namespace message_operations
} // namespace ros

#endif // TT_CORE_MSGS_MESSAGE_MAPGENPOINTRESPONSE_H
